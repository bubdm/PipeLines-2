// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;

namespace PipeLines.Model.PipeItemModels
{
    class VerticalPipe : PipeItem
    {
        private static Random rnd = new Random();
        public VerticalPipe(int posX, int posY):base(posX,posY)
        {
            if (rnd.Next(0, 3) != 0)
                this.uriSource = new Uri("Assets/vertical.png", UriKind.Relative);
            else
                this.uriSource = new Uri("Assets/vertical2.png", UriKind.Relative);
            this.waterBackgroundSource = new Uri("Assets/vertical_water.png", UriKind.Relative);
        }

        public override int[] possibleDirectionByPipeType(int x, int y)
        {
            int[] nextXY;
            if (this.Posx == x && this.PosY - 1 == y)
            {
                this.AnimationStartPoint = new Point(0, 0);
                this.AnimationEndPoint = new Point(0, 1);
                return (nextXY = new int[] { this.posX, this.PosY + 1 });
            }                
            else if (this.Posx == x && this.PosY + 1 == y)
            {
                this.AnimationStartPoint = new Point(0, 1);
                this.AnimationEndPoint = new Point(0, 0);
                return (nextXY = new int[] { this.posX, this.PosY - 1 });
            }                
            else return null;
        }
    }
}
